// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String @id @default(uuid())
  login     String
  version   Int
  createdAt BigInt
  updatedAt BigInt
  password  String
}

model Artist {
  id     String  @id @default(uuid())
  name   String
  grammy Boolean
  albums Album[]
  track  Track[]
  favs   Favs?   @relation(fields: [favsId], references: [id])
  favsId String?
}

model Album {
  id       String  @id @default(uuid())
  name     String
  year     Int
  atrist   Artist? @relation(fields: [artistId], references: [id])
  artistId String?
  track    Track[]
  favs     Favs?   @relation(fields: [favsId], references: [id])
  favsId   String?
}

model Track {
  id       String  @id @default(uuid())
  name     String
  duration Int
  atrist   Artist? @relation(fields: [artistId], references: [id])
  album    Album?  @relation(fields: [albumId], references: [id])
  favs     Favs?   @relation(fields: [favsId], references: [id])
  artistId String?
  albumId  String?
  favsId   String?
}

model Favs {
  id      String   @id @default(uuid())
  artists Artist[]
  albums  Album[]
  tracks  Track[]
}
